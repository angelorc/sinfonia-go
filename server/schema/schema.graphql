# DIRECTIVE
##########
directive @auth on FIELD_DEFINITION

directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION


# SCALAR
##########
scalar Time
scalar ObjectID @goModel(model: "github.com/angelorc/sinfonia-go/server/scalar.ObjectIDScalar")
scalar JSON
scalar Upload

# QUERY
##########
type Query {
    # Transaction
    ##########
    transaction(
        where: TransactionWhere
    ): Transaction

    transactions(
        where: TransactionWhere
        in: [ObjectID]
        orderBy: TransactionOrderByENUM
        skip: Int
        limit: Int
    ): [Transaction]!

    transactionCount(
        where: TransactionWhere
    ): Int

    # Message
    ##########
    message(
        where: MessageWhere
    ): Message

    messages(
        where: MessageWhere
        in: [ObjectID]
        orderBy: MessageOrderByENUM
        skip: Int
        limit: Int
    ): [Message]!

    messageCount(
        where: MessageWhere
    ): Int

    # Account
    ##########
    account(
        where: AccountWhere
    ): Account

    accounts(
        where: AccountWhere
        in: [ObjectID]
        orderBy: AccountOrderByENUM
        skip: Int
        limit: Int
    ): [Account]!

    accountCount(
        where: AccountWhere
    ): Int

    # Fantoken
    ##########
    fantoken(
        where: FantokenWhere
    ): Fantoken

    fantokens(
        where: FantokenWhere
        in: [ObjectID]
        orderBy: FantokenOrderByENUM
        skip: Int
        limit: Int
    ): [Fantoken]!

    fantokenCount(
        where: FantokenWhere
    ): Int

    # Merkledrop
    ##########
    merkledrop(
        where: MerkledropWhere
    ): Merkledrop

    merkledrops(
        where: MerkledropWhere
        in: [ObjectID]
        orderBy: MerkledropOrderByENUM
        skip: Int
        limit: Int
    ): [Merkledrop]!

    merkledropCount(
        where: MerkledropWhere
    ): Int

    # MerkledropProof
    ##########
    merkledropProof(
        where: MerkledropProofWhere
    ): MerkledropProof

    merkledropProofs(
        where: MerkledropProofWhere
        in: [ObjectID]
        orderBy: MerkledropProofOrderByENUM
        skip: Int
        limit: Int
    ): [MerkledropProof]!

    merkledropProofCount(
        where: MerkledropProofWhere
    ): Int

    # Incentive
    ##########
    incentive(
        where: IncentiveWhere
    ): Incentive

    incentives(
        where: IncentiveWhere
        in: [ObjectID]
        orderBy: IncentiveOrderByENUM
        skip: Int
        limit: Int
    ): [Incentive]!

    incentiveCount(
        where: IncentiveWhere
    ): Int

    # Swap
    ##########
    swap(
        where: SwapWhere
    ): Swap

    swaps(
        where: SwapWhere
        in: [ObjectID]
        orderBy: SwapOrderByENUM
        skip: Int
        limit: Int
    ): [Swap]!

    swapCount(
        where: SwapWhere
    ): Int

    # Pool
    ##########
    pool(
        where: PoolWhere
    ): Pool

    pools(
        where: PoolWhere
        in: [ObjectID]
        orderBy: PoolOrderByENUM
        skip: Int
        limit: Int
    ): [Pool]!

    poolCount(
        where: PoolWhere
    ): Int
}

type Mutation {
    # MerkledropProof TODO: add auth
    ##########
    merkledropProofsStoreList(
        id: Int,
        file: Upload!
    ): Int!
}